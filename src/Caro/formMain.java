/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Caro;

import java.awt.Color;
import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.border.LineBorder;

/**
 *
 * @author phixuanhoan
 */
public class formMain extends javax.swing.JFrame {
    private int level = 1;
    private int lengthPanel;
    private int lengthOneBox = 40;
    private int numOfBox;
    private int widthForm;
    private int heightForm;
    public  int playState = 1;
    JButton[][] Map = new JButton[numOfBox][numOfBox];
    int lengIcon;
    private int win1 = 0;
    private int lose1 = 0;
    private int win2 = 0;
    private int lose2 = 0;
    
    /**
     * Creates new form formMain
     */
    public formMain() {
        initComponents();
        this.setLocationRelativeTo(null);
        widthForm = this.getSize().width;
        heightForm = this.getSize().height; 
        txtLevel.setText("50");
        taoMap();
    }
    // Hàm trả về kiểu ImageIcon để add vào icon
    public ImageIcon getIconButton(String name, int width, int height){
        ImageIcon imageIcon = new ImageIcon("images/"+name+".png");
        Image img = imageIcon.getImage();
        Image newImg = img.getScaledInstance(width, height, Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(newImg);
        return image;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        txtLevel = new javax.swing.JTextField();
        btnPlay = new javax.swing.JButton();
        panel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        lblWin1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblWin2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 204));

        btnPlay.setText("Play");
        btnPlay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlayActionPerformed(evt);
            }
        });

        panel.setBackground(new java.awt.Color(255, 204, 204));
        panel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 699, Short.MAX_VALUE)
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 699, Short.MAX_VALUE)
        );

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel1.setText("Người chơi thứ nhất");

        lblWin1.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        lblWin1.setForeground(new java.awt.Color(255, 51, 51));
        lblWin1.setText("Thắng : 0");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 1, 16)); // NOI18N
        jLabel4.setText("Người chơi thứ hai");

        lblWin2.setFont(new java.awt.Font("Times New Roman", 2, 14)); // NOI18N
        lblWin2.setForeground(new java.awt.Color(255, 51, 51));
        lblWin2.setText("Thắng : 0");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(btnPlay, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblWin1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblWin2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnPlay))
                        .addGap(80, 80, 80)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblWin1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblWin2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnPlayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlayActionPerformed
        taoMap();
    }//GEN-LAST:event_btnPlayActionPerformed
    public void taoMap(){
        playState = 1;
        lengthOneBox = Integer.parseInt(txtLevel.getText());
        this.setSize(widthForm, heightForm);  
        panel.removeAll();
        lengthPanel = panel.getSize().width;
        numOfBox = lengthPanel / lengthOneBox;
        JOptionPane.showMessageDialog(null, numOfBox);
        Map = new JButton[numOfBox][numOfBox];
        for(int i = 0; i < numOfBox; i++){
            for(int j = 0; j < numOfBox; j++){
                Map[i][j] = new JButton();
                Map[i][j].setName("map");
                Map[i][j].setSize(lengthOneBox, lengthOneBox);
                Map[i][j].setLocation(j*Map[i][j].getWidth(), i*Map[i][j].getHeight());
                Map[i][j].setFocusPainted(false);
                Map[i][j].setBorder(new LineBorder(Color.BLACK));
                int index_X = i; 
                int index_Y = j;
                Map[i][j].addActionListener(new ActionListener(){
                    public void actionPerformed(ActionEvent e) {
                        playGame(index_X,index_Y);
                    }
                });
                panel.add(Map[i][j]);
                this.setSize(widthForm+1, heightForm);  
            }
        }
        lengIcon = lengthOneBox - 10;
    }
    private boolean isEndHorizontal(int x, int y, String type){
        int countLeft = 0;
        for (int i = x; i >= 0; i--){
            if (Map[y][i].getName().equals(type)){
                 countLeft++;
            }
            else{
               break;
            }
        }
        int countRight = 0;
        for (int i = x + 1; i < numOfBox; i++){
            if (Map[y][i].getName().equals(type)){
                countRight++;
            }
            else{
                break;
            }
        }
        return countLeft + countRight == 5;
    }
    private boolean isEndVertical(int x, int y, String type){
        int countTop = 0;
        for (int i = y; i >= 0; i--){
            if (Map[i][x].getName().equals(type)){
                countTop++;
            }
            else
                break;
            }

        int countBottom = 0;
        for (int i = y + 1; i < numOfBox; i++){
            if (Map[i][x].getName().equals(type)){
                countBottom++;
            }
            else
                break;
            }

        return countTop + countBottom == 5;
    }
    private boolean isEndPrimary(int x, int y, String type){
        int countTop = 0;
        for (int i = 0; i <= x; i++){
            if (x - i < 0 || y - i < 0)
                break;
            if (Map[y-i][x-i].getName().equals(type)){
                countTop++;
            }
            else
                break;
        }

        int countBottom = 0;
        for (int i = 1; i <= numOfBox - x; i++){
            if (y + i >= numOfBox || x + i >= numOfBox)
                break;
            if (Map[y+i][x+i].getName().equals(type)){
                countBottom++;
            }
            else
                break;
        }
        return countTop + countBottom == 5;
    }
    private boolean isEndSub(int x, int y, String type){
        int countTop = 0;
        for (int i = 0; i <= x; i++){
            if (x + i > numOfBox-1 || y - i < 0)
                break;
            if (Map[y-i][x+i].getName().equals(type)){
                countTop++;
            }else
                break;
        }
        int countBottom = 0;
        for (int i = 1; i <= numOfBox - x; i++){
            if (y + i >= numOfBox || x - i < 0)
                break;
            if (Map[y+i][x-i].getName().equals(type)){
                countBottom++;
             }else
                break;
        }
        return countTop + countBottom == 5;
    }

    public void playGame(int x, int y){
        if(playState == 1){
            if(Map[x][y].getIcon() == null){
                Map[x][y].setIcon(getIconButton("x", lengIcon, lengIcon));
                Map[x][y].setName("x");
                if(isEndHorizontal(y, x, "x") == true || isEndVertical(y, x, "x") == true || isEndPrimary(y, x, "x") == true || isEndSub(y, x, "x") == true){
                    JOptionPane.showMessageDialog(null, "Người chơi thứ nhất đã thắng");
                    win1++;
                    lblWin1.setText("Thắng: " + win1);
                    txtLevel.setText("50");
                    taoMap();
                }
                playState = 2;
            }else{
                JOptionPane.showMessageDialog(null, "Không thể đánh vào đây");
            }           
        }else if(playState == 2){
            if(Map[x][y].getIcon() == null){
                Map[x][y].setIcon(getIconButton("o", lengIcon, lengIcon));
                Map[x][y].setName("o");
                if(isEndHorizontal(y, x, "o") == true || isEndVertical(y, x, "o") == true || isEndPrimary(y, x, "o") == true || isEndSub(y, x, "o") == true){
                    JOptionPane.showMessageDialog(null, "Người chơi thứ hai đã thắng");
                    win2++;
                    lblWin2.setText("Thắng: " + win2);
                    txtLevel.setText("50");
                    taoMap();
                }
                playState = 1;
            }else{
                JOptionPane.showMessageDialog(null, "Không thể đánh vào đây");
            }    
            
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(formMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(formMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(formMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(formMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new formMain().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnPlay;
    private javax.swing.JButton btnPlay1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblWin1;
    private javax.swing.JLabel lblWin2;
    private javax.swing.JPanel panel;
    private javax.swing.JPanel panel1;
    private javax.swing.JTextField txtLevel;
    private javax.swing.JTextField txtLevel1;
    // End of variables declaration//GEN-END:variables
}
